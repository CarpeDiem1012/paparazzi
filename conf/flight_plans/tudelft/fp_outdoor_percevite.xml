<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<!--refer: rotorcraft survey mission flightplan -->
<!-- Fellowship center: 51.991029, 4.378361 -->
<!-- Valkenburg: 52.1680869,4.4124674,187m-->
<!-- home: 52.013881,4.373010 -->
<flight_plan alt="8.0" ground_alt="0" lat0="52.1680869" lon0="4.4124674" max_dist_from_home="75" name="Delft Basic" security_height="2">
  <header>
    #include "autopilot.h"
    #include "subsystems/datalink/datalink.h"
    #include "subsystems/electrical.h"
    #include "subsystems/radio_control.h"
    #include "modules/percevite_vo/percevite_vo.h"
  </header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="CLIMB" x="0.0" y="5.0"/>
    <waypoint name="STDBY" x="-2.0" y="-5.0"/>
    <waypoint name="AVOID" x="-12.0" y="-5.0"/>
    <waypoint name="p1" x="38.5" y="38.5"/>
    <waypoint name="p2" x="-0.6" y="21.6"/>
    <waypoint name="OBS" x="25.0" y="25.0"/>
    <waypoint name="TD" x="5.6" y="-10.9"/>
    <waypoint x="50" y="-50"  name="FA1"/>  <!--waypoint lat="51.9907109" lon="4.3788250"  name="FA1"/-->
    <waypoint x="50" y="50"   name="FA2"/>  <!--waypoint lat="51.9913839" lon="4.3783137"  name="FA2"/-->
    <waypoint x="-50" y="50"  name="FA3"/>  <!--waypoint lat="51.9912810" lon="4.3778320"  name="FA3"/-->
    <waypoint x="-50" y="-50" name="FA4"/>  <!--waypoint lat="51.9905797" lon="4.3783202"  name="FA4"/-->
  </waypoints>
  <sectors>
    <sector color="red" name="Flight_Area">
      <corner name="FA4"/>
      <corner name="FA3"/>
      <corner name="FA2"/>
      <corner name="FA1"/>
    </sector>
  </sectors>

  <exceptions>
    <!-- Avoid -->
    <exception cond="((percevite_requires_avoidance == true) &&
      (nav_block == IndexOfBlock('Line12')) && (SELF_ID == 1) &&
      (autopilot_in_flight() == true) )" deroute="PercEviteAvoid12"/>

    <exception cond="((percevite_requires_avoidance == true) &&
      (nav_block == IndexOfBlock('Line21')) && (SELF_ID == 1) &&
      (autopilot_in_flight() == true) )" deroute="PercEviteAvoid21"/>

    <!-- After Avoiding -->
    <exception cond="((percevite_requires_avoidance == false) &&
      (nav_block == IndexOfBlock('PercEviteAvoid12')) && (SELF_ID == 1) &&
      (autopilot_in_flight() == true) )" deroute="Line12"/>

    <exception cond="((percevite_requires_avoidance == false) &&
      (nav_block == IndexOfBlock('PercEviteAvoid21')) && (SELF_ID == 1) &&
      (autopilot_in_flight() == true) )" deroute="Line21"/>
      <!-- resume -->

    <!-- RC-Loss -->
    <!--exception cond="((radio_control.status == RC_REALLY_LOST) &&
      !(IndexOfBlock('Takeoff') > nav_block) &&
      !(nav_block >= IndexOfBlock('landHere')) &&
      (autopilot_in_flight() == true) )" deroute="ComeBackAndLand"/-->

    <!-- GPS loss -->
    <!-- Not done from flight plan, main.c goes to AP_MODE_FAILSAFE hardcoded -->

    <!-- Geofence -->
    <exception cond="(!InsideFlight_Area(GetPosX(), GetPosY()) && !(nav_block == IndexOfBlock('flare')) && !(nav_block == IndexOfBlock('landed')) && !(nav_block == IndexOfBlock('land')) && !(nav_block == IndexOfBlock('HoldingPoint')) && !(nav_block == IndexOfBlock('WaitGPS')) && !(nav_block == IndexOfBlock('GeoInit')))" deroute="landHere"/>

    <!-- Datalink loss -->
    <exception cond="(datalink_time > 60 &&
      !(datalink_time > 120) &&
      !(IndexOfBlock('Takeoff') > nav_block) &&
      !(nav_block >= IndexOfBlock('landHere')) &&
      (autopilot_in_flight() == true) )" deroute="DatalinkLoss"/>

    <!-- Battery loss -->
    <!--exception cond="(electrical.bat_low &&
      !(IndexOfBlock('HoldingPoint') > nav_block) &&
      !(nav_block >= IndexOfBlock('landHere')) &&
      (autopilot_in_flight() == true) )" deroute="ComeBackAndLand"/>
    <exception cond="(electrical.bat_critical &&
      !(IndexOfBlock('HoldingPoint') > nav_block) &&
      !(nav_block >= IndexOfBlock('landHere')) &&
      (autopilot_in_flight() == true) )" deroute="landHere"/-->
  </exceptions>

  <blocks>
    <block name="WaitGPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="GeoInit">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <!--call_once fun="NavSetGroundReferenceHere()"/-->
    </block>
    <block name="HoldingPoint">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="StartEngine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="stateGetPositionEnu_f()->z > 2.0" deroute="Standby"/>
      <call_once fun="NavSetWaypointHere(WP_CLIMB)"/>
      <stay climb="nav_climb_vspeed" vmode="climb" wp="CLIMB"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <stay wp="STDBY"/>
    </block>

    <block name="Line12" strip_button="Line12" strip_icon="line.png">
      <go from="p1" hmode="route" wp="p2"/>
    </block>
    <block name="Line21">
      <go from="p2" hmode="route" wp="p1"/>
      <deroute block="Line12"/>
    </block>

    <block name="PercEviteAvoid12">
      <stay wp="AVOID"/>
    </block>
    <block name="PercEviteAvoid21">
      <stay wp="AVOID"/>
    </block>

    <block name="stay_p1" strip_button="stay_p1" strip_icon="flat_theme/lookdown.png">
      <stay wp="p1"/>
    </block>
    <block name="go_p2">
      <go wp="p2"/>
      <deroute block="stay_p1"/>
    </block>
    <block name="line_p1_p2">
      <go from="p1" hmode="route" wp="p2"/>
      <stay until="stage_time>10" wp="p2"/>
      <go from="p2" hmode="route" wp="p1"/>
      <deroute block="stay_p1"/>
    </block>

    <block name="landHere" strip_button="LandHere" strip_icon="land-right.png">
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
    </block>
    <block name="land">
      <go wp="TD"/>
    </block>
    <block name="flare">
      <exception cond="NavDetectGround()" deroute="HoldingPoint"/>
      <exception cond="!nav_is_in_flight()" deroute="landed"/>
      <call_once fun="NavStartDetectGround()"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>
    <block name="landed">
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="ComeBackAndLand">
      <go wp="HOME"/>
      <deroute block="landHere"/>
    </block>
    <block name="DatalinkLoss">
      <call_once fun="NavSetWaypointHere(WP_TD)"/>
      <stay until="stage_time>60" wp="TD"/>
      <deroute block="ComeBackAndLand"/>
    </block>
  </blocks>
</flight_plan>
